/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ExamContract, ExamContractInterface } from "../ExamContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "AddressAlreadyInUseError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
    ],
    name: "SubjectAlreadyAcceptedError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
    ],
    name: "SubjectNotAcceptableError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "testIdx",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
    ],
    name: "TestAlreadyAcceptedError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "testIdx",
        type: "uint8",
      },
    ],
    name: "TestDoesNotExistsError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "testIdx",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
    ],
    name: "TestExpiredError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "testIdx",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "mark",
        type: "uint8",
      },
    ],
    name: "TestNotAcceptableError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "testIdx",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
    ],
    name: "TestNotTakenError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "unauthorizedAdmin",
        type: "address",
      },
    ],
    name: "UnauthorizedAdminError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "unauthorizedAddr",
        type: "address",
      },
    ],
    name: "UnauthorizedProfessorError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
    ],
    name: "MissingSubjectRequrements",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "testIdx",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
    ],
    name: "MissingTestRequirements",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "mark",
        type: "uint8",
      },
    ],
    name: "SubjectAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
    ],
    name: "SubjectResetted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "testIdx",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "mark",
        type: "uint8",
      },
    ],
    name: "TestFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "testIdx",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "mark",
        type: "uint8",
      },
    ],
    name: "TestPassed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "testIdx",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
    ],
    name: "TestRejected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "testIdx",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
    ],
    name: "TestResetted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
    ],
    name: "acceptSubjectResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "profAddr",
        type: "address",
      },
    ],
    name: "addAuthorizedProf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "addStudent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "cfu",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "requiredCount",
        type: "uint8",
      },
      {
        internalType: "uint256[]",
        name: "subjectIdToUnlock",
        type: "uint256[]",
      },
    ],
    name: "addSubject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "careers",
    outputs: [
      {
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "deleteStudent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
    ],
    name: "getSubjectMark",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "enum IExamContract.Status",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
    ],
    name: "getSubjectTests",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "expiresIn",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "minMark",
            type: "uint8",
          },
          {
            internalType: "uint8[][]",
            name: "testIdxRequired",
            type: "uint8[][]",
          },
          {
            internalType: "uint8[]",
            name: "testIdxReset",
            type: "uint8[]",
          },
          {
            internalType: "uint8[]",
            name: "testIdxResetOnTake",
            type: "uint8[]",
          },
        ],
        internalType: "struct IExamContract.Test[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "testIdx",
        type: "uint8",
      },
    ],
    name: "getTestMark",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "enum IExamContract.Status",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "profAddr",
        type: "address",
      },
    ],
    name: "isProfAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "studentId",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "mark",
            type: "uint8",
          },
        ],
        internalType: "struct IExamContract.StudentMark[]",
        name: "subjectResults",
        type: "tuple[]",
      },
    ],
    name: "registerSubjectResults",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "testIdx",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "studentId",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "mark",
            type: "uint8",
          },
        ],
        internalType: "struct IExamContract.StudentMark[]",
        name: "testResults",
        type: "tuple[]",
      },
    ],
    name: "registerTestResults",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "testIdx",
        type: "uint8",
      },
    ],
    name: "rejectTestResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "profAddr",
        type: "address",
      },
    ],
    name: "removeAuthorizedProf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
    ],
    name: "removeSubject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
    ],
    name: "resetSubject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "expiresIn",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "minMark",
            type: "uint8",
          },
          {
            internalType: "uint8[][]",
            name: "testIdxRequired",
            type: "uint8[][]",
          },
          {
            internalType: "uint8[]",
            name: "testIdxReset",
            type: "uint8[]",
          },
          {
            internalType: "uint8[]",
            name: "testIdxResetOnTake",
            type: "uint8[]",
          },
        ],
        internalType: "struct IExamContract.Test[]",
        name: "tests",
        type: "tuple[]",
      },
    ],
    name: "setSubjectTests",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "studentIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "subjects",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "cfu",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "requiredCount",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050608051613fd96100b4600039600081816107db0152818161082e01528181610ce001528181610d3301528181610dda01528181610e2d015281816119260152818161197901528181611a5a01528181611aad01528181611c9901528181611cbd0152611d100152613fd96000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063a9b4be5f116100ad578063b614a12f11610071578063b614a12f14610350578063b99a98831461036c578063ea54044914610388578063f851a440146103b9578063fdf3af94146103d75761012c565b8063a9b4be5f14610287578063ab0fbdff146102b7578063acbdbb4f146102d3578063b265cd3f14610303578063b44870051461031f5761012c565b806370239bba116100f457806370239bba146101e7578063730bcc5d1461020357806380d019991461021f57806384b9f80c1461023b5780639ab439f21461026b5761012c565b80630d4219b4146101315780632a346ca71461014d5780632ac56a6c146101695780632c7424af146101995780635664edec146101cb575b600080fd5b61014b600480360381019061014691906128bd565b6103f3565b005b61016760048036038101906101629190612956565b610546565b005b610183600480360381019061017e9190612996565b6106ef565b60405161019091906129d2565b60405180910390f35b6101b360048036038101906101ae9190612996565b61070d565b6040516101c293929190612a95565b60405180910390f35b6101e560048036038101906101e09190612b31565b6107d9565b005b61020160048036038101906101fc9190612bc7565b6108fa565b005b61021d60048036038101906102189190612c3b565b610cde565b005b61023960048036038101906102349190612996565b610dd8565b005b61025560048036038101906102509190612b31565b610efa565b6040516102629190612c83565b60405180910390f35b61028560048036038101906102809190612996565b610f64565b005b6102a1600480360381019061029c9190612c3b565b611202565b6040516102ae91906129d2565b60405180910390f35b6102d160048036038101906102cc9190612c9e565b61121a565b005b6102ed60048036038101906102e89190612996565b611423565b6040516102fa9190613037565b60405180910390f35b61031d60048036038101906103189190612996565b611711565b005b61033960048036038101906103349190612956565b611838565b6040516103479291906130d0565b60405180910390f35b61036a600480360381019061036591906131a5565b611924565b005b61038660048036038101906103819190613261565b611a58565b005b6103a2600480360381019061039d9190612996565b611bd6565b6040516103b09291906130d0565b60405180910390f35b6103c1611c97565b6040516103ce91906132b0565b60405180910390f35b6103f160048036038101906103ec9190612b31565b611cbb565b005b8260008082815260200190815260200160002060030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166104975780336040517f5cd645a500000000000000000000000000000000000000000000000000000000815260040161048e9291906132cb565b60405180910390fd5b600080600086815260200190815260200160002090508060020160006104bd91906125c3565b60005b8484905081101561053e57816002018585838181106104e2576104e16132f4565b5b90506020028101906104f49190613332565b908060018154018082558091505060019003906000526020600020906006020160009091909190915081816105299190613dd2565b5050808061053690613de0565b9150506104c0565b505050505050565b8181600080838152602001908152602001600020600201805490508160ff16106105a95781816040517f255d404c0000000000000000000000000000000000000000000000000000000081526004016105a0929190613e29565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600280811115610600576105ff613059565b5b60026000838152602001908152602001600020600101600087815260200190815260200160002060010160008660ff1660ff16815260200190815260200160002060000160019054906101000a900460ff16600281111561066457610663613059565b5b14156106ab578484826040517fd88667850000000000000000000000000000000000000000000000000000000081526004016106a293929190613e52565b60405180910390fd5b6106b6858583611ddc565b808460ff16867ff470d4d06a90a2419f7b8a4db4e8429c8a1f4eb7d41d33a4409e0518737d66d160405160405180910390a45050505050565b60026020528060005260406000206000915090508060000154905081565b600060205280600052604060002060009150905080600001805461073090613455565b80601f016020809104026020016040519081016040528092919081815260200182805461075c90613455565b80156107a95780601f1061077e576101008083540402835291602001916107a9565b820191906000526020600020905b81548152906001019060200180831161078c57829003601f168201915b5050505050908060010160009054906101000a900460ff16908060040160009054906101000a900460ff16905083565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461088b577f0000000000000000000000000000000000000000000000000000000000000000336040517f4fee97ae000000000000000000000000000000000000000000000000000000008152600401610882929190613e89565b60405180910390fd5b600160008084815260200190815260200160002060030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b8360008082815260200190815260200160002060030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661099e5780336040517f5cd645a50000000000000000000000000000000000000000000000000000000081526004016109959291906132cb565b60405180910390fd5b8484600080838152602001908152602001600020600201805490508160ff1610610a015781816040517f255d404c0000000000000000000000000000000000000000000000000000000081526004016109f8929190613e29565b60405180910390fd5b60008060008981526020019081526020016000206002018760ff1681548110610a2d57610a2c6132f4565b5b906000526020600020906006020160020160009054906101000a900460ff16905060005b86869050811015610cd357610a838989898985818110610a7457610a736132f4565b5b90506040020160000135611f14565b8160ff16878783818110610a9a57610a996132f4565b5b9050604002016020016020810190610ab29190613eb2565b60ff161015610b6a57610ae28989898985818110610ad357610ad26132f4565b5b90506040020160000135611ddc565b868682818110610af557610af46132f4565b5b905060400201600001358860ff168a7f81f0fca616f8f8432d3dee8bf142de0f6548a017a48e7e51855b169a5e4e0f358a8a86818110610b3857610b376132f4565b5b9050604002016020016020810190610b509190613eb2565b604051610b5d9190613edf565b60405180910390a4610cc0565b610b918989898985818110610b8257610b816132f4565b5b90506040020160000135611ff1565b15610c7057610be88989898985818110610bae57610bad6132f4565b5b905060400201600001358a8a86818110610bcb57610bca6132f4565b5b9050604002016020016020810190610be39190613eb2565b61227e565b868682818110610bfb57610bfa6132f4565b5b905060400201600001358860ff168a7f292bb2f8a6f756097a7dd1b9faf97cf04adfaf4c8a3d27b3ec0e0122e144396c8a8a86818110610c3e57610c3d6132f4565b5b9050604002016020016020810190610c569190613eb2565b604051610c639190613edf565b60405180910390a4610cbf565b868682818110610c8357610c826132f4565b5b905060400201600001358860ff168a7fcf255ad0d0c338a3867953ae8a95455df1b171a32c4e46aa4865c79b2ce6c2f060405160405180910390a45b5b8080610ccb90613de0565b915050610a51565b505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d90577f0000000000000000000000000000000000000000000000000000000000000000336040517f4fee97ae000000000000000000000000000000000000000000000000000000008152600401610d87929190613e89565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e8a577f0000000000000000000000000000000000000000000000000000000000000000336040517f4fee97ae000000000000000000000000000000000000000000000000000000008152600401610e81929190613e89565b60405180910390fd5b60008082815260200190815260200160002060008082016000610ead91906125e7565b6001820160006101000a81549060ff0219169055600282016000610ed191906125c3565b6004820160006101000a81549060ff0219169055600582016000610ef59190612627565b505050565b600080600084815260200190815260200160002060030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600260008381526020019081526020016000206001016000848152602001908152602001600020905060006002811115610fe757610fe6613059565b5b8160000160019054906101000a900460ff16600281111561100b5761100a613059565b5b14156110505782826040517f7374d689000000000000000000000000000000000000000000000000000000008152600401611047929190613efa565b60405180910390fd5b60028081111561106357611062613059565b5b8160000160019054906101000a900460ff16600281111561108757611086613059565b5b14156110cc5782826040517f54eb04500000000000000000000000000000000000000000000000000000000081526004016110c3929190613efa565b60405180910390fd5b6000806000858152602001908152602001600020600501905060005b81805490508110156111845760026000858152602001908152602001600020600101600083838154811061111f5761111e6132f4565b5b90600052602060002001548152602001908152602001600020600001600281819054906101000a900460ff168092919061115890613f23565b91906101000a81548160ff021916908360ff16021790555050808061117c90613de0565b9150506110e8565b5060028260000160016101000a81548160ff021916908360028111156111ad576111ac613059565b5b021790555082847fd5073de0bda15b52bfd85a0853927ff6dffd9519a6aceb6c88597040e9468d888460000160009054906101000a900460ff166040516111f49190613edf565b60405180910390a350505050565b60016020528060005260406000206000915090505481565b8260008082815260200190815260200160002060030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166112be5780336040517f5cd645a50000000000000000000000000000000000000000000000000000000081526004016112b59291906132cb565b60405180910390fd5b60005b8383905081101561141c5760006112f4868686858181106112e5576112e46132f4565b5b90506040020160000135612333565b90508061134b5784848381811061130e5761130d6132f4565b5b90506040020160000135867f7db79b3ece6bfe5705017193a72f7f81690158f884e6299e7bac410c1943dab560405160405180910390a350611409565b600060026000878786818110611364576113636132f4565b5b905060400201600001358152602001908152602001600020600101600088815260200190815260200160002090508585848181106113a5576113a46132f4565b5b90506040020160200160208101906113bd9190613eb2565b8160000160006101000a81548160ff021916908360ff16021790555060018160000160016101000a81548160ff0219169083600281111561140157611400613059565b5b021790555050505b808061141490613de0565b9150506112c1565b5050505050565b6060600080838152602001908152602001600020600201805480602002602001604051908101604052809291908181526020016000905b8282101561170657838290600052602060002090600602016040518060c001604052908160008201805461148d90613455565b80601f01602080910402602001604051908101604052809291908181526020018280546114b990613455565b80156115065780601f106114db57610100808354040283529160200191611506565b820191906000526020600020905b8154815290600101906020018083116114e957829003601f168201915b50505050508152602001600182015481526020016002820160009054906101000a900460ff1660ff1660ff16815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156115f3578382906000526020600020018054806020026020016040519081016040528092919081815260200182805480156115df57602002820191906000526020600020906000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116115a85790505b50505050508152602001906001019061155b565b5050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561167057602002820191906000526020600020906000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116116395790505b50505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156116ee57602002820191906000526020600020906000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116116b75790505b5050505050815250508152602001906001019061145a565b505050509050919050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600260008381526020019081526020016000206001016000848152602001908152602001600020905060028081111561179357611792613059565b5b8160000160019054906101000a900460ff1660028111156117b7576117b6613059565b5b14156117fc5782826040517f54eb04500000000000000000000000000000000000000000000000000000000081526004016117f3929190613efa565b60405180910390fd5b61180583612407565b81837f93a7c7f947f1153cea691a29ec201dd9094c359c96fda287e0948c39cde5ff9560405160405180910390a3505050565b6000808383600080838152602001908152602001600020600201805490508160ff161061189e5781816040517f255d404c000000000000000000000000000000000000000000000000000000008152600401611895929190613e29565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006118ef828989612577565b90508060000160009054906101000a900460ff168160000160019054906101000a900460ff1695509550505050509250929050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146119d6577f0000000000000000000000000000000000000000000000000000000000000000336040517f4fee97ae0000000000000000000000000000000000000000000000000000000081526004016119cd929190613e89565b60405180910390fd5b6000806000898152602001908152602001600020905086868260000191906119ff929190612648565b50848160010160006101000a81548160ff021916908360ff160217905550838160040160006101000a81548160ff021916908360ff1602179055508282826005019190611a4d9291906126ce565b505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611b0a577f0000000000000000000000000000000000000000000000000000000000000000336040517f4fee97ae000000000000000000000000000000000000000000000000000000008152600401611b01929190613e89565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611b8e57816040517f3545979e000000000000000000000000000000000000000000000000000000008152600401611b8591906132b0565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6000806000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060026000828152602001908152602001600020600101600085815260200190815260200160002060000160009054906101000a900460ff1660026000838152602001908152602001600020600101600086815260200190815260200160002060000160019054906101000a900460ff169250925050915091565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611d6d577f0000000000000000000000000000000000000000000000000000000000000000336040517f4fee97ae000000000000000000000000000000000000000000000000000000008152600401611d64929190613e89565b60405180910390fd5b600080600084815260200190815260200160002060030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000611de9828585612577565b905060008160000160006101000a81548160ff021916908360ff16021790555060008160000160016101000a81548160ff02191690836002811115611e3157611e30613059565b5b021790555060008060008681526020019081526020016000206002018460ff1681548110611e6257611e616132f4565b5b9060005260206000209060060201600401905060005b81805490508160ff161015611f0c576000611ec98588858560ff1681548110611ea457611ea36132f4565b5b90600052602060002090602091828204019190069054906101000a900460ff16612577565b905060008160000160016101000a81548160ff02191690836002811115611ef357611ef2613059565b5b0217905550508080611f0490613f23565b915050611e78565b505050505050565b60008060008581526020019081526020016000206002018360ff1681548110611f4057611f3f6132f4565b5b9060005260206000209060060201600501905060005b81805490508160ff161015611fea576000611fa78487858560ff1681548110611f8257611f816132f4565b5b90600052602060002090602091828204019190069054906101000a900460ff16612577565b905060008160000160016101000a81548160ff02191690836002811115611fd157611fd0613059565b5b0217905550508080611fe290613f23565b915050611f56565b5050505050565b6000806000808681526020019081526020016000206002018460ff168154811061201e5761201d6132f4565b5b9060005260206000209060060201600301905060028081111561204457612043613059565b5b60026000858152602001908152602001600020600101600087815260200190815260200160002060010160008660ff1660ff16815260200190815260200160002060000160019054906101000a900460ff1660028111156120a8576120a7613059565b5b14156120b8576000915050612277565b6000818054905014156120cf576001915050612277565b60005b81805490508110156122705760006001905060005b8383815481106120fa576120f96132f4565b5b9060005260206000200180549050811015612249576000848481548110612124576121236132f4565b5b9060005260206000200182815481106121405761213f6132f4565b5b90600052602060002090602091828204019190069054906101000a900460ff169050600061216f888b84612577565b90506000600281111561218557612184613059565b5b8160000160019054906101000a900460ff1660028111156121a9576121a8613059565b5b14806121b85750806001015442115b156121c857600093505050612249565b600160028111156121dc576121db613059565b5b8160000160019054906101000a900460ff166002811115612200576121ff613059565b5b14156122345760028160000160016101000a81548160ff0219169083600281111561222e5761222d613059565b5b02179055505b5050808061224190613de0565b9150506120e7565b50801561225c5760019350505050612277565b50808061226890613de0565b9150506120d2565b5060009150505b9392505050565b60008060008681526020019081526020016000206002018460ff16815481106122aa576122a96132f4565b5b906000526020600020906006020160010154426122c79190613f4d565b905060006122d6848787612577565b9050828160000160006101000a81548160ff021916908360ff16021790555060018160000160016101000a81548160ff0219169083600281111561231d5761231c613059565b5b0217905550818160010181905550505050505050565b600080600084815260200190815260200160002060040160009054906101000a900460ff1660ff1660026000848152602001908152602001600020600101600085815260200190815260200160002060000160029054906101000a900460ff1660ff16101580156123ff57506002808111156123b2576123b1613059565b5b60026000848152602001908152602001600020600101600085815260200190815260200160002060000160019054906101000a900460ff1660028111156123fc576123fb613059565b5b14155b905092915050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060005b600080848152602001908152602001600020600201805490508160ff16101561250c5760026000838152602001908152602001600020600101600084815260200190815260200160002060010160008260ff1660ff168152602001908152602001600020600080820160006101000a81549060ff02191690556000820160016101000a81549060ff021916905560018201600090556002820160006101000a81549060ff02191690555050808061250490613f23565b91505061244e565b50600260008281526020019081526020016000206001016000838152602001908152602001600020600080820160006101000a81549060ff02191690556000820160016101000a81549060ff02191690556000820160026101000a81549060ff021916905550505050565b600060026000858152602001908152602001600020600101600084815260200190815260200160002060010160008360ff1660ff16815260200190815260200160002090509392505050565b50805460008255600602906000526020600020908101906125e4919061271b565b50565b5080546125f390613455565b6000825580601f106126055750612624565b601f016020900490600052602060002090810190612623919061278e565b5b50565b5080546000825590600052602060002090810190612645919061278e565b50565b82805461265490613455565b90600052602060002090601f01602090048101928261267657600085556126bd565b82601f1061268f57803560ff19168380011785556126bd565b828001600101855582156126bd579182015b828111156126bc5782358255916020019190600101906126a1565b5b5090506126ca919061278e565b5090565b82805482825590600052602060002090810192821561270a579160200282015b828111156127095782358255916020019190600101906126ee565b5b509050612717919061278e565b5090565b5b8082111561278a576000808201600061273591906125e7565b60018201600090556002820160006101000a81549060ff021916905560038201600061276191906127ab565b60048201600061277191906127cc565b60058201600061278191906127cc565b5060060161271c565b5090565b5b808211156127a757600081600090555060010161278f565b5090565b50805460008255906000526020600020908101906127c991906127f4565b50565b50805460008255601f0160209004906000526020600020908101906127f1919061278e565b50565b5b80821115612814576000818161280b91906127cc565b506001016127f5565b5090565b600080fd5b600080fd5b6000819050919050565b61283581612822565b811461284057600080fd5b50565b6000813590506128528161282c565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261287d5761287c612858565b5b8235905067ffffffffffffffff81111561289a5761289961285d565b5b6020830191508360208202830111156128b6576128b5612862565b5b9250929050565b6000806000604084860312156128d6576128d5612818565b5b60006128e486828701612843565b935050602084013567ffffffffffffffff8111156129055761290461281d565b5b61291186828701612867565b92509250509250925092565b600060ff82169050919050565b6129338161291d565b811461293e57600080fd5b50565b6000813590506129508161292a565b92915050565b6000806040838503121561296d5761296c612818565b5b600061297b85828601612843565b925050602061298c85828601612941565b9150509250929050565b6000602082840312156129ac576129ab612818565b5b60006129ba84828501612843565b91505092915050565b6129cc81612822565b82525050565b60006020820190506129e760008301846129c3565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612a27578082015181840152602081019050612a0c565b83811115612a36576000848401525b50505050565b6000601f19601f8301169050919050565b6000612a58826129ed565b612a6281856129f8565b9350612a72818560208601612a09565b612a7b81612a3c565b840191505092915050565b612a8f8161291d565b82525050565b60006060820190508181036000830152612aaf8186612a4d565b9050612abe6020830185612a86565b612acb6040830184612a86565b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612afe82612ad3565b9050919050565b612b0e81612af3565b8114612b1957600080fd5b50565b600081359050612b2b81612b05565b92915050565b60008060408385031215612b4857612b47612818565b5b6000612b5685828601612843565b9250506020612b6785828601612b1c565b9150509250929050565b60008083601f840112612b8757612b86612858565b5b8235905067ffffffffffffffff811115612ba457612ba361285d565b5b602083019150836040820283011115612bc057612bbf612862565b5b9250929050565b60008060008060608587031215612be157612be0612818565b5b6000612bef87828801612843565b9450506020612c0087828801612941565b935050604085013567ffffffffffffffff811115612c2157612c2061281d565b5b612c2d87828801612b71565b925092505092959194509250565b600060208284031215612c5157612c50612818565b5b6000612c5f84828501612b1c565b91505092915050565b60008115159050919050565b612c7d81612c68565b82525050565b6000602082019050612c986000830184612c74565b92915050565b600080600060408486031215612cb757612cb6612818565b5b6000612cc586828701612843565b935050602084013567ffffffffffffffff811115612ce657612ce561281d565b5b612cf286828701612b71565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000612d46826129ed565b612d508185612d2a565b9350612d60818560208601612a09565b612d6981612a3c565b840191505092915050565b612d7d81612822565b82525050565b612d8c8161291d565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000612df68383612d83565b60208301905092915050565b6000602082019050919050565b6000612e1a82612dbe565b612e248185612dc9565b9350612e2f83612dda565b8060005b83811015612e60578151612e478882612dea565b9750612e5283612e02565b925050600181019050612e33565b5085935050505092915050565b6000612e798383612e0f565b905092915050565b6000602082019050919050565b6000612e9982612d92565b612ea38185612d9d565b935083602082028501612eb585612dae565b8060005b85811015612ef15784840389528151612ed28582612e6d565b9450612edd83612e81565b925060208a01995050600181019050612eb9565b50829750879550505050505092915050565b600060c0830160008301518482036000860152612f208282612d3b565b9150506020830151612f356020860182612d74565b506040830151612f486040860182612d83565b5060608301518482036060860152612f608282612e8e565b91505060808301518482036080860152612f7a8282612e0f565b91505060a083015184820360a0860152612f948282612e0f565b9150508091505092915050565b6000612fad8383612f03565b905092915050565b6000602082019050919050565b6000612fcd82612cfe565b612fd78185612d09565b935083602082028501612fe985612d1a565b8060005b8581101561302557848403895281516130068582612fa1565b945061301183612fb5565b925060208a01995050600181019050612fed565b50829750879550505050505092915050565b600060208201905081810360008301526130518184612fc2565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061309957613098613059565b5b50565b60008190506130aa82613088565b919050565b60006130ba8261309c565b9050919050565b6130ca816130af565b82525050565b60006040820190506130e56000830185612a86565b6130f260208301846130c1565b9392505050565b60008083601f84011261310f5761310e612858565b5b8235905067ffffffffffffffff81111561312c5761312b61285d565b5b60208301915083600182028301111561314857613147612862565b5b9250929050565b60008083601f84011261316557613164612858565b5b8235905067ffffffffffffffff8111156131825761318161285d565b5b60208301915083602082028301111561319e5761319d612862565b5b9250929050565b600080600080600080600060a0888a0312156131c4576131c3612818565b5b60006131d28a828b01612843565b975050602088013567ffffffffffffffff8111156131f3576131f261281d565b5b6131ff8a828b016130f9565b965096505060406132128a828b01612941565b94505060606132238a828b01612941565b935050608088013567ffffffffffffffff8111156132445761324361281d565b5b6132508a828b0161314f565b925092505092959891949750929550565b6000806040838503121561327857613277612818565b5b600061328685828601612b1c565b925050602061329785828601612843565b9150509250929050565b6132aa81612af3565b82525050565b60006020820190506132c560008301846132a1565b92915050565b60006040820190506132e060008301856129c3565b6132ed60208301846132a1565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b60008235600160c00383360303811261334e5761334d613323565b5b80830191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b600080833560016020038436030381126133a6576133a5613323565b5b80840192508235915067ffffffffffffffff8211156133c8576133c7613328565b5b6020830192506001820236038313156133e4576133e361332d565b5b509250929050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061346d57607f821691505b6020821081141561348157613480613426565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026134e97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826134ac565b6134f386836134ac565b95508019841693508086168417925050509392505050565b6000819050919050565b600061353061352b61352684612822565b61350b565b612822565b9050919050565b6000819050919050565b61354a83613515565b61355e61355682613537565b8484546134b9565b825550505050565b600090565b613573613566565b61357e818484613541565b505050565b5b818110156135a25761359760008261356b565b600181019050613584565b5050565b601f8211156135e7576135b881613487565b6135c18461349c565b810160208510156135d0578190505b6135e46135dc8561349c565b830182613583565b50505b505050565b600082821c905092915050565b600061360a600019846008026135ec565b1980831691505092915050565b600061362383836135f9565b9150826002028217905092915050565b61363d83836133ec565b67ffffffffffffffff811115613656576136556133f7565b5b6136608254613455565b61366b8282856135a6565b6000601f83116001811461369a5760008415613688578287013590505b6136928582613617565b8655506136fa565b601f1984166136a886613487565b60005b828110156136d0578489013582556001820191506020850194506020810190506136ab565b868310156136ed57848901356136e9601f8916826135f9565b8355505b6001600288020188555050505b50505050505050565b61370e838383613633565b505050565b600081356137208161282c565b80915050919050565b60008160001b9050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61376284613729565b9350801983169250808416831791505092915050565b61378182613515565b61379461378d82613537565b8354613736565b8255505050565b600081356137a88161292a565b80915050919050565b600060ff6137be84613729565b9350801983169250808416831791505092915050565b60006137ef6137ea6137e58461291d565b61350b565b61291d565b9050919050565b6000819050919050565b613809826137d4565b61381c613815826137f6565b83546137b1565b8255505050565b600080833560016020038436030381126138405761383f613323565b5b80840192508235915067ffffffffffffffff82111561386257613861613328565b5b60208301925060208202360383131561387e5761387d61332d565b5b509250929050565b6000819050919050565b600080833560016020038436030381126138ad576138ac613323565b5b80840192508235915067ffffffffffffffff8211156138cf576138ce613328565b5b6020830192506020820236038313156138eb576138ea61332d565b5b509250929050565b600081549050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008190506001806001038301049050919050565b60008190508160005260206000209050919050565b600081549050919050565b6000819050602060016020038301049050919050565b60008190508160005260206000209050919050565b5b818110156139ac576139a160008261356b565b60018101905061398e565b5050565b6139e07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff836020036008026135ec565b815481168255505050565b81831015613a43576139fc82613962565b613a0584613962565b613a0e83613978565b818101838201600160208906026000811115613a3257613a3181600185036139b0565b5b613a3c828461398d565b5050505050505b505050565b68010000000000000000821115613a6257613a616133f7565b5b613a6b81613957565b828255613a798382846139eb565b505050565b81811015613a9c57613a9160008261356b565b600181019050613a7e565b5050565b613aab600082613a48565b50565b60008214613abf57613abe61335a565b5b613ac881613aa0565b5050565b5b81811015613aeb57613ae0600082613aae565b600181019050613acd565b5050565b81831015613b2857613b008261392d565b613b098461392d565b613b1283613942565b818101838201613b228183613acc565b50505050505b505050565b68010000000000000000821115613b4757613b466133f7565b5b613b50816138f3565b828255613b5e838284613aef565b505050565b600082905092915050565b6000819050919050565b600082905092915050565b600060088302613b9460ff826134ac565b613b9e86836134ac565b95508019841693508086168417925050509392505050565b613bbf836137d4565b613bd3613bcb826137f6565b848454613b83565b825550505050565b613be58383613b78565b613bef8183613a48565b613bf883613b6e565b613c0183613978565b6000805b84811015613c535783613c178161379b565b9050613c24818486613bb6565b6020850194506001830192506001602003831115613c4757600092506001840193505b50600181019050613c05565b5050505050505050565b8115613c6c57613c6b61335a565b5b613c77848483613bdb565b50505050565b613c878383613b63565b613c918183613b2d565b613c9a83613886565b613ca383613942565b6000805b84811015613cde57613cb98488613890565b613cc581838688613c5d565b6020860195506001850194505050600181019050613ca7565b5050505050505050565b613cf3838383613c7d565b505050565b613d03838383613bdb565b505050565b6000810160008301613d1a8185613389565b613d25818386613703565b50505050600181016020830180613d3b81613713565b9050613d478184613778565b505050600281016040830180613d5c8161379b565b9050613d688184613800565b5050506003810160608301613d7d8185613823565b613d88818386613ce8565b505050506004810160808301613d9e8185613890565b613da9818386613cf8565b505050506005810160a08301613dbf8185613890565b613dca818386613cf8565b505050505050565b613ddc8282613d08565b5050565b6000613deb82612822565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613e1e57613e1d6138fe565b5b600182019050919050565b6000604082019050613e3e60008301856129c3565b613e4b6020830184612a86565b9392505050565b6000606082019050613e6760008301866129c3565b613e746020830185612a86565b613e8160408301846129c3565b949350505050565b6000604082019050613e9e60008301856132a1565b613eab60208301846132a1565b9392505050565b600060208284031215613ec857613ec7612818565b5b6000613ed684828501612941565b91505092915050565b6000602082019050613ef46000830184612a86565b92915050565b6000604082019050613f0f60008301856129c3565b613f1c60208301846129c3565b9392505050565b6000613f2e8261291d565b915060ff821415613f4257613f416138fe565b5b600182019050919050565b6000613f5882612822565b9150613f6383612822565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613f9857613f976138fe565b5b82820190509291505056fea2646970667358221220cdde7a40a7246dd6f376008d13bcfc3469d67005545be28f46988d543b924e6464736f6c63430008090033";

type ExamContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExamContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExamContract__factory extends ContractFactory {
  constructor(...args: ExamContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ExamContract> {
    return super.deploy(overrides || {}) as Promise<ExamContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ExamContract {
    return super.attach(address) as ExamContract;
  }
  override connect(signer: Signer): ExamContract__factory {
    return super.connect(signer) as ExamContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExamContractInterface {
    return new utils.Interface(_abi) as ExamContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExamContract {
    return new Contract(address, _abi, signerOrProvider) as ExamContract;
  }
}
