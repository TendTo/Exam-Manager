/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ExamContract, ExamContractInterface } from "../ExamContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "AddressAlreadyInUseError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
    ],
    name: "SubjectAlreadyAcceptedError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
    ],
    name: "SubjectNotAcceptableError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "testIdx",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
    ],
    name: "TestAlreadyAcceptedError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "testIdx",
        type: "uint8",
      },
    ],
    name: "TestDoesNotExistsError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "testIdx",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
    ],
    name: "TestExpiredError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "testIdx",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "mark",
        type: "uint8",
      },
    ],
    name: "TestNotAcceptableError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "testIdx",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
    ],
    name: "TestNotTakenError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "unauthorizedAdmin",
        type: "address",
      },
    ],
    name: "UnauthorizedAdminError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "unauthorizedAddr",
        type: "address",
      },
    ],
    name: "UnauthorizedProfessorError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
    ],
    name: "MissingSubjectRequrements",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "testIdx",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
    ],
    name: "MissingTestRequirements",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "mark",
        type: "uint8",
      },
    ],
    name: "SubjectAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
    ],
    name: "SubjectResetted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "testIdx",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "mark",
        type: "uint8",
      },
    ],
    name: "TestFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "testIdx",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "mark",
        type: "uint8",
      },
    ],
    name: "TestPassed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "testIdx",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
    ],
    name: "TestRejected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "testIdx",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
    ],
    name: "TestResetted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
    ],
    name: "acceptSubjectResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "profAddr",
        type: "address",
      },
    ],
    name: "addAuthorizedProf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "addStudent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "cfu",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "requiredCount",
        type: "uint8",
      },
      {
        internalType: "uint256[]",
        name: "subjectIdToUnlock",
        type: "uint256[]",
      },
    ],
    name: "addSubject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "careers",
    outputs: [
      {
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "deleteStudent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
    ],
    name: "getSubjectMark",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "enum IExamContract.Status",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
    ],
    name: "getSubjectTests",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "expiresIn",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "minMark",
            type: "uint8",
          },
          {
            internalType: "uint8[][]",
            name: "testIdxRequired",
            type: "uint8[][]",
          },
          {
            internalType: "uint8[]",
            name: "testIdxReset",
            type: "uint8[]",
          },
          {
            internalType: "uint8[]",
            name: "testIdxResetOnTake",
            type: "uint8[]",
          },
        ],
        internalType: "struct IExamContract.Test[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "testIdx",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "studentId",
        type: "uint256",
      },
    ],
    name: "getTestMark",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "enum IExamContract.Status",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "profAddr",
        type: "address",
      },
    ],
    name: "isProfAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "studentId",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "mark",
            type: "uint8",
          },
        ],
        internalType: "struct IExamContract.StudentMark[]",
        name: "subjectResults",
        type: "tuple[]",
      },
    ],
    name: "registerSubjectResults",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "testIdx",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "studentId",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "mark",
            type: "uint8",
          },
        ],
        internalType: "struct IExamContract.StudentMark[]",
        name: "testResults",
        type: "tuple[]",
      },
    ],
    name: "registerTestResults",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "testIdx",
        type: "uint8",
      },
    ],
    name: "rejectTestResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "profAddr",
        type: "address",
      },
    ],
    name: "removeAuthorizedProf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
    ],
    name: "removeSubject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
    ],
    name: "resetSubject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "expiresIn",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "minMark",
            type: "uint8",
          },
          {
            internalType: "uint8[][]",
            name: "testIdxRequired",
            type: "uint8[][]",
          },
          {
            internalType: "uint8[]",
            name: "testIdxReset",
            type: "uint8[]",
          },
          {
            internalType: "uint8[]",
            name: "testIdxResetOnTake",
            type: "uint8[]",
          },
        ],
        internalType: "struct IExamContract.Test[]",
        name: "tests",
        type: "tuple[]",
      },
    ],
    name: "setSubjectTests",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "studentIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "subjects",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "cfu",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "requiredCount",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050608051613fe56100b4600039600081816107db0152818161082e01528181610ce001528181610d3301528181610dda01528181610e2d015281816118e20152818161193501528181611a1601528181611a6901528181611c1201528181611c360152611c890152613fe56000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063a3cf2c0b116100ad578063b614a12f11610071578063b614a12f14610350578063b99a98831461036c578063bfa9d60414610388578063f851a440146103b9578063fdf3af94146103d75761012c565b8063a3cf2c0b14610287578063a9b4be5f146102b8578063ab0fbdff146102e8578063acbdbb4f14610304578063b265cd3f146103345761012c565b806370239bba116100f457806370239bba146101e7578063730bcc5d1461020357806380d019991461021f57806384b9f80c1461023b5780639ab439f21461026b5761012c565b80630d4219b4146101315780632a346ca71461014d5780632ac56a6c146101695780632c7424af146101995780635664edec146101cb575b600080fd5b61014b60048036038101906101469190612836565b6103f3565b005b610167600480360381019061016291906128cf565b610546565b005b610183600480360381019061017e919061290f565b6106ef565b604051610190919061294b565b60405180910390f35b6101b360048036038101906101ae919061290f565b61070d565b6040516101c293929190612a0e565b60405180910390f35b6101e560048036038101906101e09190612aaa565b6107d9565b005b61020160048036038101906101fc9190612b40565b6108fa565b005b61021d60048036038101906102189190612bb4565b610cde565b005b6102396004803603810190610234919061290f565b610dd8565b005b61025560048036038101906102509190612aaa565b610efa565b6040516102629190612bfc565b60405180910390f35b6102856004803603810190610280919061290f565b610f64565b005b6102a1600480360381019061029c9190612c17565b611202565b6040516102af929190612ce1565b60405180910390f35b6102d260048036038101906102cd9190612bb4565b6112aa565b6040516102df919061294b565b60405180910390f35b61030260048036038101906102fd9190612d0a565b6112c2565b005b61031e6004803603810190610319919061290f565b6114cb565b60405161032b91906130a3565b60405180910390f35b61034e6004803603810190610349919061290f565b6117b9565b005b61036a60048036038101906103659190613171565b6118e0565b005b6103866004803603810190610381919061322d565b611a14565b005b6103a2600480360381019061039d919061326d565b611b92565b6040516103b0929190612ce1565b60405180910390f35b6103c1611c10565b6040516103ce91906132bc565b60405180910390f35b6103f160048036038101906103ec9190612aaa565b611c34565b005b8260008082815260200190815260200160002060030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166104975780336040517f5cd645a500000000000000000000000000000000000000000000000000000000815260040161048e9291906132d7565b60405180910390fd5b600080600086815260200190815260200160002090508060020160006104bd919061253c565b60005b8484905081101561053e57816002018585838181106104e2576104e1613300565b5b90506020028101906104f4919061333e565b908060018154018082558091505060019003906000526020600020906006020160009091909190915081816105299190613dde565b5050808061053690613dec565b9150506104c0565b505050505050565b8181600080838152602001908152602001600020600201805490508160ff16106105a95781816040517f255d404c0000000000000000000000000000000000000000000000000000000081526004016105a0929190613e35565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600280811115610600576105ff612c6a565b5b60026000838152602001908152602001600020600101600087815260200190815260200160002060010160008660ff1660ff16815260200190815260200160002060000160019054906101000a900460ff16600281111561066457610663612c6a565b5b14156106ab578484826040517fd88667850000000000000000000000000000000000000000000000000000000081526004016106a293929190613e5e565b60405180910390fd5b6106b6858583611d55565b808460ff16867ff470d4d06a90a2419f7b8a4db4e8429c8a1f4eb7d41d33a4409e0518737d66d160405160405180910390a45050505050565b60026020528060005260406000206000915090508060000154905081565b600060205280600052604060002060009150905080600001805461073090613461565b80601f016020809104026020016040519081016040528092919081815260200182805461075c90613461565b80156107a95780601f1061077e576101008083540402835291602001916107a9565b820191906000526020600020905b81548152906001019060200180831161078c57829003601f168201915b5050505050908060010160009054906101000a900460ff16908060040160009054906101000a900460ff16905083565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461088b577f0000000000000000000000000000000000000000000000000000000000000000336040517f4fee97ae000000000000000000000000000000000000000000000000000000008152600401610882929190613e95565b60405180910390fd5b600160008084815260200190815260200160002060030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b8360008082815260200190815260200160002060030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661099e5780336040517f5cd645a50000000000000000000000000000000000000000000000000000000081526004016109959291906132d7565b60405180910390fd5b8484600080838152602001908152602001600020600201805490508160ff1610610a015781816040517f255d404c0000000000000000000000000000000000000000000000000000000081526004016109f8929190613e35565b60405180910390fd5b60008060008981526020019081526020016000206002018760ff1681548110610a2d57610a2c613300565b5b906000526020600020906006020160020160009054906101000a900460ff16905060005b86869050811015610cd357610a838989898985818110610a7457610a73613300565b5b90506040020160000135611e8d565b8160ff16878783818110610a9a57610a99613300565b5b9050604002016020016020810190610ab29190613ebe565b60ff161015610b6a57610ae28989898985818110610ad357610ad2613300565b5b90506040020160000135611d55565b868682818110610af557610af4613300565b5b905060400201600001358860ff168a7f81f0fca616f8f8432d3dee8bf142de0f6548a017a48e7e51855b169a5e4e0f358a8a86818110610b3857610b37613300565b5b9050604002016020016020810190610b509190613ebe565b604051610b5d9190613eeb565b60405180910390a4610cc0565b610b918989898985818110610b8257610b81613300565b5b90506040020160000135611f6a565b15610c7057610be88989898985818110610bae57610bad613300565b5b905060400201600001358a8a86818110610bcb57610bca613300565b5b9050604002016020016020810190610be39190613ebe565b6121f7565b868682818110610bfb57610bfa613300565b5b905060400201600001358860ff168a7f292bb2f8a6f756097a7dd1b9faf97cf04adfaf4c8a3d27b3ec0e0122e144396c8a8a86818110610c3e57610c3d613300565b5b9050604002016020016020810190610c569190613ebe565b604051610c639190613eeb565b60405180910390a4610cbf565b868682818110610c8357610c82613300565b5b905060400201600001358860ff168a7fcf255ad0d0c338a3867953ae8a95455df1b171a32c4e46aa4865c79b2ce6c2f060405160405180910390a45b5b8080610ccb90613dec565b915050610a51565b505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d90577f0000000000000000000000000000000000000000000000000000000000000000336040517f4fee97ae000000000000000000000000000000000000000000000000000000008152600401610d87929190613e95565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e8a577f0000000000000000000000000000000000000000000000000000000000000000336040517f4fee97ae000000000000000000000000000000000000000000000000000000008152600401610e81929190613e95565b60405180910390fd5b60008082815260200190815260200160002060008082016000610ead9190612560565b6001820160006101000a81549060ff0219169055600282016000610ed1919061253c565b6004820160006101000a81549060ff0219169055600582016000610ef591906125a0565b505050565b600080600084815260200190815260200160002060030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600260008381526020019081526020016000206001016000848152602001908152602001600020905060006002811115610fe757610fe6612c6a565b5b8160000160019054906101000a900460ff16600281111561100b5761100a612c6a565b5b14156110505782826040517f7374d689000000000000000000000000000000000000000000000000000000008152600401611047929190613f06565b60405180910390fd5b60028081111561106357611062612c6a565b5b8160000160019054906101000a900460ff16600281111561108757611086612c6a565b5b14156110cc5782826040517f54eb04500000000000000000000000000000000000000000000000000000000081526004016110c3929190613f06565b60405180910390fd5b6000806000858152602001908152602001600020600501905060005b81805490508110156111845760026000858152602001908152602001600020600101600083838154811061111f5761111e613300565b5b90600052602060002001548152602001908152602001600020600001600281819054906101000a900460ff168092919061115890613f2f565b91906101000a81548160ff021916908360ff16021790555050808061117c90613dec565b9150506110e8565b5060028260000160016101000a81548160ff021916908360028111156111ad576111ac612c6a565b5b021790555082847fd5073de0bda15b52bfd85a0853927ff6dffd9519a6aceb6c88597040e9468d888460000160009054906101000a900460ff166040516111f49190613eeb565b60405180910390a350505050565b6000808484600080838152602001908152602001600020600201805490508160ff16106112685781816040517f255d404c00000000000000000000000000000000000000000000000000000000815260040161125f929190613e35565b60405180910390fd5b60006112758689896122ac565b90508060000160009054906101000a900460ff168160000160019054906101000a900460ff1694509450505050935093915050565b60016020528060005260406000206000915090505481565b8260008082815260200190815260200160002060030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166113665780336040517f5cd645a500000000000000000000000000000000000000000000000000000000815260040161135d9291906132d7565b60405180910390fd5b60005b838390508110156114c457600061139c8686868581811061138d5761138c613300565b5b905060400201600001356122f8565b9050806113f3578484838181106113b6576113b5613300565b5b90506040020160000135867f7db79b3ece6bfe5705017193a72f7f81690158f884e6299e7bac410c1943dab560405160405180910390a3506114b1565b60006002600087878681811061140c5761140b613300565b5b9050604002016000013581526020019081526020016000206001016000888152602001908152602001600020905085858481811061144d5761144c613300565b5b90506040020160200160208101906114659190613ebe565b8160000160006101000a81548160ff021916908360ff16021790555060018160000160016101000a81548160ff021916908360028111156114a9576114a8612c6a565b5b021790555050505b80806114bc90613dec565b915050611369565b5050505050565b6060600080838152602001908152602001600020600201805480602002602001604051908101604052809291908181526020016000905b828210156117ae57838290600052602060002090600602016040518060c001604052908160008201805461153590613461565b80601f016020809104026020016040519081016040528092919081815260200182805461156190613461565b80156115ae5780601f10611583576101008083540402835291602001916115ae565b820191906000526020600020905b81548152906001019060200180831161159157829003601f168201915b50505050508152602001600182015481526020016002820160009054906101000a900460ff1660ff1660ff16815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561169b5783829060005260206000200180548060200260200160405190810160405280929190818152602001828054801561168757602002820191906000526020600020906000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116116505790505b505050505081526020019060010190611603565b5050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561171857602002820191906000526020600020906000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116116e15790505b505050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561179657602002820191906000526020600020906000905b82829054906101000a900460ff1660ff168152602001906001019060208260000104928301926001038202915080841161175f5790505b50505050508152505081526020019060010190611502565b505050509050919050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600260008381526020019081526020016000206001016000848152602001908152602001600020905060028081111561183b5761183a612c6a565b5b8160000160019054906101000a900460ff16600281111561185f5761185e612c6a565b5b14156118a45782826040517f54eb045000000000000000000000000000000000000000000000000000000000815260040161189b929190613f06565b60405180910390fd5b6118ad836123cc565b81837f93a7c7f947f1153cea691a29ec201dd9094c359c96fda287e0948c39cde5ff9560405160405180910390a3505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611992577f0000000000000000000000000000000000000000000000000000000000000000336040517f4fee97ae000000000000000000000000000000000000000000000000000000008152600401611989929190613e95565b60405180910390fd5b6000806000898152602001908152602001600020905086868260000191906119bb9291906125c1565b50848160010160006101000a81548160ff021916908360ff160217905550838160040160006101000a81548160ff021916908360ff1602179055508282826005019190611a09929190612647565b505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611ac6577f0000000000000000000000000000000000000000000000000000000000000000336040517f4fee97ae000000000000000000000000000000000000000000000000000000008152600401611abd929190613e95565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611b4a57816040517f3545979e000000000000000000000000000000000000000000000000000000008152600401611b4191906132bc565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60008060026000848152602001908152602001600020600101600085815260200190815260200160002060000160009054906101000a900460ff1660026000858152602001908152602001600020600101600086815260200190815260200160002060000160019054906101000a900460ff16915091509250929050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611ce6577f0000000000000000000000000000000000000000000000000000000000000000336040517f4fee97ae000000000000000000000000000000000000000000000000000000008152600401611cdd929190613e95565b60405180910390fd5b600080600084815260200190815260200160002060030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000611d628285856122ac565b905060008160000160006101000a81548160ff021916908360ff16021790555060008160000160016101000a81548160ff02191690836002811115611daa57611da9612c6a565b5b021790555060008060008681526020019081526020016000206002018460ff1681548110611ddb57611dda613300565b5b9060005260206000209060060201600401905060005b81805490508160ff161015611e85576000611e428588858560ff1681548110611e1d57611e1c613300565b5b90600052602060002090602091828204019190069054906101000a900460ff166122ac565b905060008160000160016101000a81548160ff02191690836002811115611e6c57611e6b612c6a565b5b0217905550508080611e7d90613f2f565b915050611df1565b505050505050565b60008060008581526020019081526020016000206002018360ff1681548110611eb957611eb8613300565b5b9060005260206000209060060201600501905060005b81805490508160ff161015611f63576000611f208487858560ff1681548110611efb57611efa613300565b5b90600052602060002090602091828204019190069054906101000a900460ff166122ac565b905060008160000160016101000a81548160ff02191690836002811115611f4a57611f49612c6a565b5b0217905550508080611f5b90613f2f565b915050611ecf565b5050505050565b6000806000808681526020019081526020016000206002018460ff1681548110611f9757611f96613300565b5b90600052602060002090600602016003019050600280811115611fbd57611fbc612c6a565b5b60026000858152602001908152602001600020600101600087815260200190815260200160002060010160008660ff1660ff16815260200190815260200160002060000160019054906101000a900460ff16600281111561202157612020612c6a565b5b14156120315760009150506121f0565b6000818054905014156120485760019150506121f0565b60005b81805490508110156121e95760006001905060005b83838154811061207357612072613300565b5b90600052602060002001805490508110156121c257600084848154811061209d5761209c613300565b5b9060005260206000200182815481106120b9576120b8613300565b5b90600052602060002090602091828204019190069054906101000a900460ff16905060006120e8888b846122ac565b9050600060028111156120fe576120fd612c6a565b5b8160000160019054906101000a900460ff16600281111561212257612121612c6a565b5b14806121315750806001015442115b15612141576000935050506121c2565b6001600281111561215557612154612c6a565b5b8160000160019054906101000a900460ff16600281111561217957612178612c6a565b5b14156121ad5760028160000160016101000a81548160ff021916908360028111156121a7576121a6612c6a565b5b02179055505b505080806121ba90613dec565b915050612060565b5080156121d557600193505050506121f0565b5080806121e190613dec565b91505061204b565b5060009150505b9392505050565b60008060008681526020019081526020016000206002018460ff168154811061222357612222613300565b5b906000526020600020906006020160010154426122409190613f59565b9050600061224f8487876122ac565b9050828160000160006101000a81548160ff021916908360ff16021790555060018160000160016101000a81548160ff0219169083600281111561229657612295612c6a565b5b0217905550818160010181905550505050505050565b600060026000858152602001908152602001600020600101600084815260200190815260200160002060010160008360ff1660ff16815260200190815260200160002090509392505050565b600080600084815260200190815260200160002060040160009054906101000a900460ff1660ff1660026000848152602001908152602001600020600101600085815260200190815260200160002060000160029054906101000a900460ff1660ff16101580156123c4575060028081111561237757612376612c6a565b5b60026000848152602001908152602001600020600101600085815260200190815260200160002060000160019054906101000a900460ff1660028111156123c1576123c0612c6a565b5b14155b905092915050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060005b600080848152602001908152602001600020600201805490508160ff1610156124d15760026000838152602001908152602001600020600101600084815260200190815260200160002060010160008260ff1660ff168152602001908152602001600020600080820160006101000a81549060ff02191690556000820160016101000a81549060ff021916905560018201600090556002820160006101000a81549060ff0219169055505080806124c990613f2f565b915050612413565b50600260008281526020019081526020016000206001016000838152602001908152602001600020600080820160006101000a81549060ff02191690556000820160016101000a81549060ff02191690556000820160026101000a81549060ff021916905550505050565b508054600082556006029060005260206000209081019061255d9190612694565b50565b50805461256c90613461565b6000825580601f1061257e575061259d565b601f01602090049060005260206000209081019061259c9190612707565b5b50565b50805460008255906000526020600020908101906125be9190612707565b50565b8280546125cd90613461565b90600052602060002090601f0160209004810192826125ef5760008555612636565b82601f1061260857803560ff1916838001178555612636565b82800160010185558215612636579182015b8281111561263557823582559160200191906001019061261a565b5b5090506126439190612707565b5090565b828054828255906000526020600020908101928215612683579160200282015b82811115612682578235825591602001919060010190612667565b5b5090506126909190612707565b5090565b5b8082111561270357600080820160006126ae9190612560565b60018201600090556002820160006101000a81549060ff02191690556003820160006126da9190612724565b6004820160006126ea9190612745565b6005820160006126fa9190612745565b50600601612695565b5090565b5b80821115612720576000816000905550600101612708565b5090565b5080546000825590600052602060002090810190612742919061276d565b50565b50805460008255601f01602090049060005260206000209081019061276a9190612707565b50565b5b8082111561278d57600081816127849190612745565b5060010161276e565b5090565b600080fd5b600080fd5b6000819050919050565b6127ae8161279b565b81146127b957600080fd5b50565b6000813590506127cb816127a5565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126127f6576127f56127d1565b5b8235905067ffffffffffffffff811115612813576128126127d6565b5b60208301915083602082028301111561282f5761282e6127db565b5b9250929050565b60008060006040848603121561284f5761284e612791565b5b600061285d868287016127bc565b935050602084013567ffffffffffffffff81111561287e5761287d612796565b5b61288a868287016127e0565b92509250509250925092565b600060ff82169050919050565b6128ac81612896565b81146128b757600080fd5b50565b6000813590506128c9816128a3565b92915050565b600080604083850312156128e6576128e5612791565b5b60006128f4858286016127bc565b9250506020612905858286016128ba565b9150509250929050565b60006020828403121561292557612924612791565b5b6000612933848285016127bc565b91505092915050565b6129458161279b565b82525050565b6000602082019050612960600083018461293c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156129a0578082015181840152602081019050612985565b838111156129af576000848401525b50505050565b6000601f19601f8301169050919050565b60006129d182612966565b6129db8185612971565b93506129eb818560208601612982565b6129f4816129b5565b840191505092915050565b612a0881612896565b82525050565b60006060820190508181036000830152612a2881866129c6565b9050612a3760208301856129ff565b612a4460408301846129ff565b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612a7782612a4c565b9050919050565b612a8781612a6c565b8114612a9257600080fd5b50565b600081359050612aa481612a7e565b92915050565b60008060408385031215612ac157612ac0612791565b5b6000612acf858286016127bc565b9250506020612ae085828601612a95565b9150509250929050565b60008083601f840112612b0057612aff6127d1565b5b8235905067ffffffffffffffff811115612b1d57612b1c6127d6565b5b602083019150836040820283011115612b3957612b386127db565b5b9250929050565b60008060008060608587031215612b5a57612b59612791565b5b6000612b68878288016127bc565b9450506020612b79878288016128ba565b935050604085013567ffffffffffffffff811115612b9a57612b99612796565b5b612ba687828801612aea565b925092505092959194509250565b600060208284031215612bca57612bc9612791565b5b6000612bd884828501612a95565b91505092915050565b60008115159050919050565b612bf681612be1565b82525050565b6000602082019050612c116000830184612bed565b92915050565b600080600060608486031215612c3057612c2f612791565b5b6000612c3e868287016127bc565b9350506020612c4f868287016128ba565b9250506040612c60868287016127bc565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110612caa57612ca9612c6a565b5b50565b6000819050612cbb82612c99565b919050565b6000612ccb82612cad565b9050919050565b612cdb81612cc0565b82525050565b6000604082019050612cf660008301856129ff565b612d036020830184612cd2565b9392505050565b600080600060408486031215612d2357612d22612791565b5b6000612d31868287016127bc565b935050602084013567ffffffffffffffff811115612d5257612d51612796565b5b612d5e86828701612aea565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000612db282612966565b612dbc8185612d96565b9350612dcc818560208601612982565b612dd5816129b5565b840191505092915050565b612de98161279b565b82525050565b612df881612896565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000612e628383612def565b60208301905092915050565b6000602082019050919050565b6000612e8682612e2a565b612e908185612e35565b9350612e9b83612e46565b8060005b83811015612ecc578151612eb38882612e56565b9750612ebe83612e6e565b925050600181019050612e9f565b5085935050505092915050565b6000612ee58383612e7b565b905092915050565b6000602082019050919050565b6000612f0582612dfe565b612f0f8185612e09565b935083602082028501612f2185612e1a565b8060005b85811015612f5d5784840389528151612f3e8582612ed9565b9450612f4983612eed565b925060208a01995050600181019050612f25565b50829750879550505050505092915050565b600060c0830160008301518482036000860152612f8c8282612da7565b9150506020830151612fa16020860182612de0565b506040830151612fb46040860182612def565b5060608301518482036060860152612fcc8282612efa565b91505060808301518482036080860152612fe68282612e7b565b91505060a083015184820360a08601526130008282612e7b565b9150508091505092915050565b60006130198383612f6f565b905092915050565b6000602082019050919050565b600061303982612d6a565b6130438185612d75565b93508360208202850161305585612d86565b8060005b858110156130915784840389528151613072858261300d565b945061307d83613021565b925060208a01995050600181019050613059565b50829750879550505050505092915050565b600060208201905081810360008301526130bd818461302e565b905092915050565b60008083601f8401126130db576130da6127d1565b5b8235905067ffffffffffffffff8111156130f8576130f76127d6565b5b602083019150836001820283011115613114576131136127db565b5b9250929050565b60008083601f840112613131576131306127d1565b5b8235905067ffffffffffffffff81111561314e5761314d6127d6565b5b60208301915083602082028301111561316a576131696127db565b5b9250929050565b600080600080600080600060a0888a0312156131905761318f612791565b5b600061319e8a828b016127bc565b975050602088013567ffffffffffffffff8111156131bf576131be612796565b5b6131cb8a828b016130c5565b965096505060406131de8a828b016128ba565b94505060606131ef8a828b016128ba565b935050608088013567ffffffffffffffff8111156132105761320f612796565b5b61321c8a828b0161311b565b925092505092959891949750929550565b6000806040838503121561324457613243612791565b5b600061325285828601612a95565b9250506020613263858286016127bc565b9150509250929050565b6000806040838503121561328457613283612791565b5b6000613292858286016127bc565b92505060206132a3858286016127bc565b9150509250929050565b6132b681612a6c565b82525050565b60006020820190506132d160008301846132ad565b92915050565b60006040820190506132ec600083018561293c565b6132f960208301846132ad565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b60008235600160c00383360303811261335a5761335961332f565b5b80830191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b600080833560016020038436030381126133b2576133b161332f565b5b80840192508235915067ffffffffffffffff8211156133d4576133d3613334565b5b6020830192506001820236038313156133f0576133ef613339565b5b509250929050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061347957607f821691505b6020821081141561348d5761348c613432565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026134f57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826134b8565b6134ff86836134b8565b95508019841693508086168417925050509392505050565b6000819050919050565b600061353c6135376135328461279b565b613517565b61279b565b9050919050565b6000819050919050565b61355683613521565b61356a61356282613543565b8484546134c5565b825550505050565b600090565b61357f613572565b61358a81848461354d565b505050565b5b818110156135ae576135a3600082613577565b600181019050613590565b5050565b601f8211156135f3576135c481613493565b6135cd846134a8565b810160208510156135dc578190505b6135f06135e8856134a8565b83018261358f565b50505b505050565b600082821c905092915050565b6000613616600019846008026135f8565b1980831691505092915050565b600061362f8383613605565b9150826002028217905092915050565b61364983836133f8565b67ffffffffffffffff81111561366257613661613403565b5b61366c8254613461565b6136778282856135b2565b6000601f8311600181146136a65760008415613694578287013590505b61369e8582613623565b865550613706565b601f1984166136b486613493565b60005b828110156136dc578489013582556001820191506020850194506020810190506136b7565b868310156136f957848901356136f5601f891682613605565b8355505b6001600288020188555050505b50505050505050565b61371a83838361363f565b505050565b6000813561372c816127a5565b80915050919050565b60008160001b9050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61376e84613735565b9350801983169250808416831791505092915050565b61378d82613521565b6137a061379982613543565b8354613742565b8255505050565b600081356137b4816128a3565b80915050919050565b600060ff6137ca84613735565b9350801983169250808416831791505092915050565b60006137fb6137f66137f184612896565b613517565b612896565b9050919050565b6000819050919050565b613815826137e0565b61382861382182613802565b83546137bd565b8255505050565b6000808335600160200384360303811261384c5761384b61332f565b5b80840192508235915067ffffffffffffffff82111561386e5761386d613334565b5b60208301925060208202360383131561388a57613889613339565b5b509250929050565b6000819050919050565b600080833560016020038436030381126138b9576138b861332f565b5b80840192508235915067ffffffffffffffff8211156138db576138da613334565b5b6020830192506020820236038313156138f7576138f6613339565b5b509250929050565b600081549050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008190506001806001038301049050919050565b60008190508160005260206000209050919050565b600081549050919050565b6000819050602060016020038301049050919050565b60008190508160005260206000209050919050565b5b818110156139b8576139ad600082613577565b60018101905061399a565b5050565b6139ec7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff836020036008026135f8565b815481168255505050565b81831015613a4f57613a088261396e565b613a118461396e565b613a1a83613984565b818101838201600160208906026000811115613a3e57613a3d81600185036139bc565b5b613a488284613999565b5050505050505b505050565b68010000000000000000821115613a6e57613a6d613403565b5b613a7781613963565b828255613a858382846139f7565b505050565b81811015613aa857613a9d600082613577565b600181019050613a8a565b5050565b613ab7600082613a54565b50565b60008214613acb57613aca613366565b5b613ad481613aac565b5050565b5b81811015613af757613aec600082613aba565b600181019050613ad9565b5050565b81831015613b3457613b0c82613939565b613b1584613939565b613b1e8361394e565b818101838201613b2e8183613ad8565b50505050505b505050565b68010000000000000000821115613b5357613b52613403565b5b613b5c816138ff565b828255613b6a838284613afb565b505050565b600082905092915050565b6000819050919050565b600082905092915050565b600060088302613ba060ff826134b8565b613baa86836134b8565b95508019841693508086168417925050509392505050565b613bcb836137e0565b613bdf613bd782613802565b848454613b8f565b825550505050565b613bf18383613b84565b613bfb8183613a54565b613c0483613b7a565b613c0d83613984565b6000805b84811015613c5f5783613c23816137a7565b9050613c30818486613bc2565b6020850194506001830192506001602003831115613c5357600092506001840193505b50600181019050613c11565b5050505050505050565b8115613c7857613c77613366565b5b613c83848483613be7565b50505050565b613c938383613b6f565b613c9d8183613b39565b613ca683613892565b613caf8361394e565b6000805b84811015613cea57613cc5848861389c565b613cd181838688613c69565b6020860195506001850194505050600181019050613cb3565b5050505050505050565b613cff838383613c89565b505050565b613d0f838383613be7565b505050565b6000810160008301613d268185613395565b613d3181838661370f565b50505050600181016020830180613d478161371f565b9050613d538184613784565b505050600281016040830180613d68816137a7565b9050613d74818461380c565b5050506003810160608301613d89818561382f565b613d94818386613cf4565b505050506004810160808301613daa818561389c565b613db5818386613d04565b505050506005810160a08301613dcb818561389c565b613dd6818386613d04565b505050505050565b613de88282613d14565b5050565b6000613df78261279b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613e2a57613e2961390a565b5b600182019050919050565b6000604082019050613e4a600083018561293c565b613e5760208301846129ff565b9392505050565b6000606082019050613e73600083018661293c565b613e8060208301856129ff565b613e8d604083018461293c565b949350505050565b6000604082019050613eaa60008301856132ad565b613eb760208301846132ad565b9392505050565b600060208284031215613ed457613ed3612791565b5b6000613ee2848285016128ba565b91505092915050565b6000602082019050613f0060008301846129ff565b92915050565b6000604082019050613f1b600083018561293c565b613f28602083018461293c565b9392505050565b6000613f3a82612896565b915060ff821415613f4e57613f4d61390a565b5b600182019050919050565b6000613f648261279b565b9150613f6f8361279b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613fa457613fa361390a565b5b82820190509291505056fea264697066735822122026b93289a35a8820e99090a39068c25257cb744fff0bd79c97924f65146f1c1f64736f6c63430008090033";

type ExamContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExamContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExamContract__factory extends ContractFactory {
  constructor(...args: ExamContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ExamContract> {
    return super.deploy(overrides || {}) as Promise<ExamContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ExamContract {
    return super.attach(address) as ExamContract;
  }
  override connect(signer: Signer): ExamContract__factory {
    return super.connect(signer) as ExamContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExamContractInterface {
    return new utils.Interface(_abi) as ExamContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExamContract {
    return new Contract(address, _abi, signerOrProvider) as ExamContract;
  }
}
